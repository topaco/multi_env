name: Train Deployment

on:
  workflow_dispatch:
    inputs:
      start_environment:
        type: choice
        description: 'Select the starting environment for deployment train'
        options:
          - dev
          - test
          - non-prod
          - prod
        default: dev
      service_name:
        type: string
        description: 'Service name'
        default: 'shop-cep-service'
      operation:
        type: string
        description: 'Operation'
        default: 'deploy'       

jobs:
  deploy_dev:
    if: ${{ inputs.start_environment == 'dev' || inputs.start_environment == 'test' || inputs.start_environment == 'non-prod' || inputs.start_environment == 'prod' }}
    name: Deploy to Dev
    uses: topaco/multi_env/.github/workflows/helm.yaml@main
    with:
      serviceName: 'shop-cep-service'
      operation: 'deploy'
      environment: 'dev'
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  deploy_test:
    if: ${{ inputs.start_environment == 'test' || inputs.start_environment == 'non-prod' || inputs.start_environment == 'prod' }}
    needs: deploy_dev
    name: Deploy to Test
    uses: topaco/multi_env/.github/workflows/helm.yaml@main
    with:
      serviceName: 'shop-cep-service'
      operation: 'deploy'
      environment: 'test'
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  deploy_non_prod:
    if: ${{ inputs.start_environment == 'non-prod' || inputs.start_environment == 'prod' }}
    needs: deploy_test
    name: Deploy to Non-Prod
    uses: topaco/multi_env/.github/workflows/helm.yaml@main
    with:
      serviceName: 'shop-cep-service'
      operation: 'deploy'
      environment: 'non-prod'
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  deploy_prod:
    if: ${{ inputs.start_environment == 'prod' }}
    needs: deploy_non_prod
    name: Deploy to Prod
    uses: topaco/multi_env/.github/workflows/helm.yaml@main
    with:
      serviceName: 'shop-cep-service'
      operation: 'deploy'
      environment: 'prod'
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
